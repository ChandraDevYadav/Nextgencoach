import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import { OpenAI } from "openai";
import { v4 as uuidv4 } from "uuid";
import Transcript from "../models/Transcript.Model.js";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const promptHeader = `‚ö†Ô∏è Important Notice: AI-Generated Reflective Output  
Disclosure Version: IR-AI-2025-v3.7

By generating or viewing this content, you acknowledge and accept that it is speculative, incomplete, and intended solely for internal personal reflection or coaching preparation.

This output was produced by an artificial intelligence system developed and operated by Industry Rockstar, with support from internal and external contributors. These contributors are referenced only for transparency and are not liable for any decisions, outcomes, or interpretations related to this content.

This system is designed to support soft-skill development, coaching conversations, and personal reflection. It is not a substitute for professional advice in any medical, financial, legal, or employment context.

‚ùå This output is NOT:  
- A diagnosis, therapy method, or psychological evaluation  
- A financial plan, tax strategy, or investment recommendation  
- A legal opinion, contract analysis, or hiring assessment  
- A substitute for certified advice or regulated professional authority  

All references to emotional, mental, or belief-based themes are metaphorical and speculative. This output is not based on DSM-5, ICD, CBT, or any clinical methodology and does not simulate or impersonate any real person or professional authority.

This tool may be accessed by users with or without formal credentials. Industry Rockstar and its collaborators cannot monitor, endorse, or control how this content is used once generated ‚Äî and disclaim all liability associated with its use or misuse.

üö´ You must not use this content to:  
- Diagnose, treat, evaluate, or profile anyone  
- Determine eligibility for hiring, rejection, partnership, or program inclusion  
- Embed into automated decision systems related to employment, safety, legal risk, or finances  
- Offer or act on legal, medical, investment, or safety-related advice  
- Share externally without the full, attached disclaimer

‚úÖ By continuing, you agree to:  
- Take full responsibility for any use, sharing, or outcome based on this content  
- Not present this output as official advice, certified analysis, or definitive judgment  
- Seek licensed professional guidance before applying content to high-stakes situations

Misuse or misrepresentation of this output is solely the responsibility of the user and may result in legal, ethical, or reputational consequences.

---`;

const promptFooter = `üîí Legal & Ethical Notice ‚Äì AI Output for Reflection Only  
Disclosure Version: IR-AI-2025-v3.7

This content was generated by an artificial intelligence system operated by Industry Rockstar, with support from independent contributors. These contributors are referenced only for operational transparency and are not responsible or liable for any interpretations, applications, or consequences resulting from this content.

This output is entirely speculative and intended only for reflection. It may include metaphorical framing or emotional language that is not diagnostic, legal, financial, or evaluative in nature.

‚ùå This content is not:  
- A substitute for therapy, financial advising, legal review, or professional consultation  
- A certified psychological evaluation or treatment recommendation  
- A hiring tool, eligibility screen, or access control mechanism  
- A simulation or impersonation of any person, clinician, attorney, or financial advisor

This content must not be embedded in automation, hiring software, legal workflows, or financial decision systems.

üö´ Do not use this content to:  
- Make decisions about diagnosis, health, employment, contracts, or safety  
- Offer or act on investment, legal, or therapeutic advice  
- Determine eligibility, approval, rejection, or categorization of any person  
- Share this content externally without the full disclaimer and version stamp

‚úÖ By using this system, you confirm that:  
- You assume full responsibility for how this content is interpreted, shared, or applied  
- You understand this content is not definitive advice, and not covered under professional licensing standards  
- You release Industry Rockstar and all related entities from liability for its use

If you are unsure how to interpret this output, pause and consult a qualified expert.  
This content exists to assist ‚Äî not to replace ‚Äî human discernment, legal counsel, or professional standards.

Generated under:  
Version ID: IR-AI-2025-v3.7  
Classification: Reflective AI Output (Non-Evaluative)  
Status: Not for External Distribution Without Full Disclaimer`;

const generateDebrief = async (req, res) => {
  try {
    const { transcriptText, zoomId } = req.body;

    if (!transcriptText) {
      return res.status(400).json({ error: "Transcript text is required" });
    }

    const systemPrompt = `You are a strategic coaching intelligence assistant trained to generate reflective, non-clinical debriefs for qualified coaches. Your task is to analyze a transcript of a coaching session and return a structured report, based entirely on the content provided ‚Äî no assumptions or external interpretation allowed.

You integrate the methodologies of:
- Andy Bustamante ‚Äì leverage detection, pressure clarity, pattern disruption
- Dan Sullivan ‚Äì unique ability leverage, future-self thinking
- Carl Buchheit ‚Äì unconscious belief language, identity-level rewiring
- Jordan Peterson ‚Äì chaos/order framing, narrative archetypes
- Kane Minkus ‚Äì personal brand positioning, platform congruence
- Ryan Reynolds ‚Äì emotional tone control, human connection, pacing
- Timeless Wisdom (Jennings-informed) ‚Äì design law alignment, motivation without fear
- Socratic Method ‚Äì deep inquiry, binary disruption, logic-based discovery

You must:
- Use only the transcript provided (no extrapolation)
- Begin the report with the full top legal disclaimer
- End the report with the full bottom legal disclaimer
- Format the report according to the structure in the Custom Prompt
- Never include client-facing advice, clinical language, or performance ratings
- Use warm, speculative, and emotionally intelligent language`;

    const customPrompt = `Generate a coaching debrief report using only the transcript provided. Begin the output with the following legal disclaimer and follow the full structure.

${promptHeader}

üìÅ 1. CLIENT INSIGHT REPORT FOR COACHES
üëÅÔ∏è For Coach‚Äôs Eyes Only ‚Äì Not for Client Distribution

- Identity Pattern Observed
- Emotional or Strategic Energy Shifts
- Reinforcing Loops or Limiting Logic
- Emergent Leverage Points
- Motivational Operating System

---

üî¨ 2. STRATEGIC RECOMMENDATIONS FOR NEXT SESSION

- Primary Thread to Reopen or Deepen
- Unheard Voice or Terrain to Explore
- Recommended Coaching Posture (Mirror / Challenge / Clarify / Contain / Reframe / Push)
- Unasked but Necessary Question
- Optional Enhancements for Next Session

(Choose from:
  - Accountability architecture
  - Tactical prioritization
  - Future-self rehearsal
  - Metaphor reframing
  - Team conflict prep
  - Narrative role reassessment)

---

üèãÔ∏è‚Äç‚ôÇÔ∏è 3. COACH PERFORMANCE FEEDBACK

- Tactical Wins
- Soft Spots or Avoided Pressure
- Energy Signature
- One Specific Upgrade for the Coach

---

üß† 3 SOCRATIC QUESTIONS YOU COULD ASK YOURSELF AS THE COACH

---

üîé POTENTIAL QUESTIONS YOU COULD ASK THE CLIENT NEXT TIME

---

${promptFooter}`;

    const response = await openai.chat.completions.create({
      messages: [
        { role: "system", content: systemPrompt },
        {
          role: "user",
          content: `${customPrompt}\n\nTranscript:\n\n${transcriptText}`,
        },
      ],
      model: "gpt-4o",
      temperature: 0.7,
      max_tokens: 3500,
    });

    const report = response.choices[0].message.content;

    // Optionally save to MongoDB
    const summaryRecord = new Transcript({
      zoomId,
      transcript: transcriptText,
      summary: report,
    });
    await summaryRecord.save();

    res.status(200).json({ report });
  } catch (error) {
    console.error("Error generating coaching summary:", error);
    res.status(500).json({
      error: "An error occurred while generating the coaching summary.",
    });
  }
};

export { generateDebrief };
